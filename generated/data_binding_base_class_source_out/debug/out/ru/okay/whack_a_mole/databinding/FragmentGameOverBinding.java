// Generated by view binder compiler. Do not edit!
package ru.okay.whack_a_mole.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.okay.whack_a_mole.R;

public final class FragmentGameOverBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton imageButtonHome;

  @NonNull
  public final ImageButton imageButtonReplay;

  @NonNull
  public final LinearLayout layoutGameOver;

  @NonNull
  public final TextView textViewScore;

  private FragmentGameOverBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton imageButtonHome, @NonNull ImageButton imageButtonReplay,
      @NonNull LinearLayout layoutGameOver, @NonNull TextView textViewScore) {
    this.rootView = rootView;
    this.imageButtonHome = imageButtonHome;
    this.imageButtonReplay = imageButtonReplay;
    this.layoutGameOver = layoutGameOver;
    this.textViewScore = textViewScore;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentGameOverBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentGameOverBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_game_over, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentGameOverBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image_button_home;
      ImageButton imageButtonHome = ViewBindings.findChildViewById(rootView, id);
      if (imageButtonHome == null) {
        break missingId;
      }

      id = R.id.image_button_replay;
      ImageButton imageButtonReplay = ViewBindings.findChildViewById(rootView, id);
      if (imageButtonReplay == null) {
        break missingId;
      }

      id = R.id.layout_game_over;
      LinearLayout layoutGameOver = ViewBindings.findChildViewById(rootView, id);
      if (layoutGameOver == null) {
        break missingId;
      }

      id = R.id.text_view_score;
      TextView textViewScore = ViewBindings.findChildViewById(rootView, id);
      if (textViewScore == null) {
        break missingId;
      }

      return new FragmentGameOverBinding((ConstraintLayout) rootView, imageButtonHome,
          imageButtonReplay, layoutGameOver, textViewScore);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
